
10.5. String Pattern MatchingÂ¶
The re module provides regular expression tools for advanced string
processing. For complex matching and manipulation, regular expressions offer
succinct, optimized solutions:
>>> import re
>>> re.findall(r'\bf[a-z]*', 'which foot or hand fell fastest')
['foot', 'fell', 'fastest']
>>> re.sub(r'(\b[a-z]+) \1', r'\1', 'cat in the the hat')
'cat in the hat'


When only simple capabilities are needed, string methods are preferred because
they are easier to read and debug:
>>> 'tea for too'.replace('too', 'two')
'tea for two'


