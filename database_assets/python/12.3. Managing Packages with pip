
12.3. Managing Packages with pipÂ¶
You can install, upgrade, and remove packages using a program called
pip.  By default pip will install packages from the Python
Package Index, <https://pypi.org>.  You can browse the Python
Package Index by going to it in your web browser, or you can use pipâs
limited search feature:
(tutorial-env) $ pip search astronomy
skyfield               - Elegant astronomy for Python
gary                   - Galactic astronomy and gravitational dynamics.
novas                  - The United States Naval Observatory NOVAS astronomy library
astroobs               - Provides astronomy ephemeris to plan telescope observations
PyAstronomy            - A collection of astronomy related tools for Python.
...


pip has a number of subcommands: âsearchâ, âinstallâ, âuninstallâ,
âfreezeâ, etc.  (Consult the Installing Python Modules guide for
complete documentation for pip.)
You can install the latest version of a package by specifying a packageâs name:
(tutorial-env) $ pip install novas
Collecting novas
  Downloading novas-3.1.1.3.tar.gz (136kB)
Installing collected packages: novas
  Running setup.py install for novas
Successfully installed novas-3.1.1.3


You can also install a specific version of a package by giving the
package name  followed by == and the version number:
(tutorial-env) $ pip install requests==2.6.0
Collecting requests==2.6.0
  Using cached requests-2.6.0-py2.py3-none-any.whl
Installing collected packages: requests
Successfully installed requests-2.6.0


If you re-run this command, pip will notice that the requested
version is already installed and do nothing.  You can supply a
different version number to get that version, or you can run pip
install --upgrade to upgrade the package to the latest version:
(tutorial-env) $ pip install --upgrade requests
Collecting requests
Installing collected packages: requests
  Found existing installation: requests 2.6.0
    Uninstalling requests-2.6.0:
      Successfully uninstalled requests-2.6.0
Successfully installed requests-2.7.0


pip uninstall followed by one or more package names will remove the
packages from the virtual environment.
pip show will display information about a particular package:
(tutorial-env) $ pip show requests
---
Metadata-Version: 2.0
Name: requests
Version: 2.7.0
Summary: Python HTTP for Humans.
Home-page: http://python-requests.org
Author: Kenneth Reitz
Author-email: me@kennethreitz.com
License: Apache 2.0
Location: /Users/akuchling/envs/tutorial-env/lib/python3.4/site-packages
Requires:


pip list will display all of the packages installed in the virtual
environment:
(tutorial-env) $ pip list
novas (3.1.1.3)
numpy (1.9.2)
pip (7.0.3)
requests (2.7.0)
setuptools (16.0)


pip freeze will produce a similar list of the installed packages,
but the output uses the format that pip install expects.
A common convention is to put this list in a requirements.txt file:
(tutorial-env) $ pip freeze > requirements.txt
(tutorial-env) $ cat requirements.txt
novas==3.1.1.3
numpy==1.9.2
requests==2.7.0


The requirements.txt can then be committed to version control and
shipped as part of an application.  Users can then install all the
necessary packages with install -r:
(tutorial-env) $ pip install -r requirements.txt
Collecting novas==3.1.1.3 (from -r requirements.txt (line 1))
  ...
Collecting numpy==1.9.2 (from -r requirements.txt (line 2))
  ...
Collecting requests==2.7.0 (from -r requirements.txt (line 3))
  ...
Installing collected packages: novas, numpy, requests
  Running setup.py install for novas
Successfully installed novas-3.1.1.3 numpy-1.9.2 requests-2.7.0


pip has many more options.  Consult the Installing Python Modules
guide for complete documentation for pip.  When youâve written
a package and want to make it available on the Python Package Index,
consult the Distributing Python Modules guide.
