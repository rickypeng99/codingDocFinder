
12.2. Creating Virtual EnvironmentsÂ¶
The module used to create and manage virtual environments is called
venv.  venv will usually install the most recent version of
Python that you have available. If you have multiple versions of Python on your
system, you can select a specific Python version by running python3 or
whichever version you want.
To create a virtual environment, decide upon a directory where you want to
place it, and run the venv module as a script with the directory path:
python3 -m venv tutorial-env


This will create the tutorial-env directory if it doesnât exist,
and also create directories inside it containing a copy of the Python
interpreter, the standard library, and various supporting files.
Once youâve created a virtual environment, you may activate it.
On Windows, run:
tutorial-env\Scripts\activate.bat


On Unix or MacOS, run:
source tutorial-env/bin/activate


(This script is written for the bash shell.  If you use the
csh or fish shells, there are alternate
activate.csh and activate.fish scripts you should use
instead.)
Activating the virtual environment will change your shellâs prompt to show what
virtual environment youâre using, and modify the environment so that running
python will get you that particular version and installation of Python.
For example:
$ source ~/envs/tutorial-env/bin/activate
(tutorial-env) $ python
Python 3.5.1 (default, May  6 2016, 10:59:36)
  ...
>>> import sys
>>> sys.path
['', '/usr/local/lib/python35.zip', ...,
'~/envs/tutorial-env/lib/python3.5/site-packages']
>>>


